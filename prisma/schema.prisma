// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id           Int            @id @unique @default(autoincrement())
  email        String
  password     String
  role         Int
  unLocked     DateTime?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime?
  teachers     Teachers[]
  illustrators Illustrators[]
  schools      Schools[]

  @@index([id])
  @@map("users")
}

model Teachers {
  id         Int         @unique @default(autoincrement())
  user_id    Int         @unique
  users      Users       @relation(fields: [user_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  name       String?
  occupation String?
  createAt   DateTime    @default(now())
  updatedAt  DateTime?
  registers  Registers[]

  @@index([id])
  @@map("registrants")
}

model Registers {
  id         Int      @unique @default(autoincrement())
  school     Schools  @relation(fields: [school_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  school_id  Int      @unique
  teachers   Teachers @relation(fields: [teacher_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  teacher_id Int      @unique
  createAt   DateTime @default(now())

  @@index([id])
  @@map("registers")
}

model Schools {
  id                    Int          @unique @default(autoincrement())
  user_id               Int?         @unique
  users                 Users?       @relation(fields: [user_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  name                  String
  cnpj_inap             String
  city                  String
  uf                    String
  type                  String?
  email                 String?      @unique
  phone                 String?
  name_registrant       String
  email_registrant      String
  occupation_registrant String?
  whatapp_registrant    String
  createdAt             DateTime     @default(now())
  updatedAt             DateTime?
  redactions            Redactions[]
  authors               Authors[]
  registers             Registers[]

  @@index([id])
  @@map("schools")
}

model Authors {
  id         Int          @unique @default(autoincrement())
  school_id  Int          @unique
  school     Schools      @relation(fields: [school_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  name       String
  class      String
  age        Int
  createAt   DateTime     @default(now())
  updatedAt  DateTime?
  redactions Redactions[]

  @@index([id])
  @@map("authors")
}

model Categories {
  id         Int          @unique @default(autoincrement())
  category   String
  createAt   DateTime     @default(now())
  updatedAt  DateTime?
  redactions Redactions[]

  @@index([id])
  @@map("categories")
}

model Redactions {
  id          Int        @unique @default(autoincrement())
  school_id   Int        @unique
  schools     Schools    @relation(fields: [school_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  category_id Int        @unique
  categories  Categories @relation(fields: [category_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  author_id   Int        @unique
  authors     Authors    @relation(fields: [author_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  title       String
  redaction   String
  status      String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime?
  drawings    Media[]

  @@index([id])
  @@map("redactions")
}

model Illustrators {
  id         Int      @unique @default(autoincrement())
  user_id    Int?     @unique
  users      Users?   @relation(fields: [user_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  name       String
  email      String
  cpf_cnpj   String
  whatapp    String
  portifolio String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
  media      Media[]

  @@index([id])
  @@map("illustrators")
}

model Media {
  id             Int          @unique @default(autoincrement())
  redaction_id   Int          @unique
  redactions     Redactions   @relation(fields: [redaction_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  illustrator_id Int          @unique
  illustrators   Illustrators @relation(fields: [illustrator_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  url_file       String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime?

  @@index([id])
  @@map("media")
}
