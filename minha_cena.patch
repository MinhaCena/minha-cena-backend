diff --git a/Dockerfile b/Dockerfile
index a0ae18b..ea0eba4 100644
--- a/Dockerfile
+++ b/Dockerfile
@@ -2,15 +2,16 @@ FROM node
 
 WORKDIR /usr/app
 
-COPY package.json ./
-COPY prisma ./prisma/
-
-RUN npm install
-RUN npx prisma generate
 RUN apt-get update && \
     apt-get install -y postgresql-client
 
-COPY . .
+COPY src/ src/
+COPY prisma/ prisma/
+COPY *.json .
+
+RUN npm install
+RUN npx prisma generate
+RUN npm build
 
 EXPOSE 3080
 
diff --git a/docker-compose.yml b/docker-compose.yml
index 2b67f79..068207a 100644
--- a/docker-compose.yml
+++ b/docker-compose.yml
@@ -13,7 +13,7 @@ services:
       - POSTGRES_PASSWORD=password
       - POSTGRES_DB=password
     volumes:
-      - pgdata:/data/postgres
+      - pgdata:/var/lib/postgresql/data
 
   adminer:
     image: adminer
@@ -26,14 +26,12 @@ services:
     container_name: minha_cena
     ports:
       - 3080:3080
-    volumes:
-      - .:/usr/app
+    environment:
+      - DATABASE_URL=postgresql://root:password@database:5432/minha_cena
     links:
       - database
     depends_on:
       - database
 
-
 volumes:
   pgdata:
-    driver: local
diff --git a/package-lock.json b/package-lock.json
index 0580ff2..9a2d03c 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -13,7 +13,7 @@
         "@nestjs/common": "^9.0.0",
         "@nestjs/core": "^9.0.0",
         "@nestjs/platform-express": "^9.0.0",
-        "@prisma/client": "^4.9.0",
+        "@prisma/client": "^4.13.0",
         "@types/bcrypt": "^5.0.0",
         "@types/validator": "^13.7.12",
         "bcrypt": "^5.1.0",
@@ -40,6 +40,7 @@
         "eslint-plugin-prettier": "^4.0.0",
         "jest": "28.1.3",
         "prettier": "^2.3.2",
+        "prisma": "^4.13.0",
         "source-map-support": "^0.5.20",
         "supertest": "^6.1.3",
         "ts-jest": "28.0.8",
@@ -1720,12 +1721,12 @@
       }
     },
     "node_modules/@prisma/client": {
-      "version": "4.9.0",
-      "resolved": "https://registry.npmjs.org/@prisma/client/-/client-4.9.0.tgz",
-      "integrity": "sha512-bz6QARw54sWcbyR1lLnF2QHvRW5R/Jxnbbmwh3u+969vUKXtBkXgSgjDA85nji31ZBlf7+FrHDy5x+5ydGyQDg==",
+      "version": "4.13.0",
+      "resolved": "https://registry.npmjs.org/@prisma/client/-/client-4.13.0.tgz",
+      "integrity": "sha512-YaiiICcRB2hatxsbnfB66uWXjcRw3jsZdlAVxmx0cFcTc/Ad/sKdHCcWSnqyDX47vAewkjRFwiLwrOUjswVvmA==",
       "hasInstallScript": true,
       "dependencies": {
-        "@prisma/engines-version": "4.9.0-42.ceb5c99003b99c9ee2c1d2e618e359c14aef2ea5"
+        "@prisma/engines-version": "4.13.0-50.1e7af066ee9cb95cf3a403c78d9aab3e6b04f37a"
       },
       "engines": {
         "node": ">=14.17"
@@ -1739,10 +1740,17 @@
         }
       }
     },
+    "node_modules/@prisma/engines": {
+      "version": "4.13.0",
+      "resolved": "https://registry.npmjs.org/@prisma/engines/-/engines-4.13.0.tgz",
+      "integrity": "sha512-HrniowHRZXHuGT9XRgoXEaP2gJLXM5RMoItaY2PkjvuZ+iHc0Zjbm/302MB8YsPdWozAPHHn+jpFEcEn71OgPw==",
+      "devOptional": true,
+      "hasInstallScript": true
+    },
     "node_modules/@prisma/engines-version": {
-      "version": "4.9.0-42.ceb5c99003b99c9ee2c1d2e618e359c14aef2ea5",
-      "resolved": "https://registry.npmjs.org/@prisma/engines-version/-/engines-version-4.9.0-42.ceb5c99003b99c9ee2c1d2e618e359c14aef2ea5.tgz",
-      "integrity": "sha512-M16aibbxi/FhW7z1sJCX8u+0DriyQYY5AyeTH7plQm9MLnURoiyn3CZBqAyIoQ+Z1pS77usCIibYJWSgleBMBA=="
+      "version": "4.13.0-50.1e7af066ee9cb95cf3a403c78d9aab3e6b04f37a",
+      "resolved": "https://registry.npmjs.org/@prisma/engines-version/-/engines-version-4.13.0-50.1e7af066ee9cb95cf3a403c78d9aab3e6b04f37a.tgz",
+      "integrity": "sha512-fsQlbkhPJf08JOzKoyoD9atdUijuGBekwoOPZC3YOygXEml1MTtgXVpnUNchQlRSY82OQ6pSGQ9PxUe4arcSLQ=="
     },
     "node_modules/@sinclair/typebox": {
       "version": "0.24.51",
@@ -6921,6 +6929,23 @@
         "url": "https://github.com/chalk/ansi-styles?sponsor=1"
       }
     },
+    "node_modules/prisma": {
+      "version": "4.13.0",
+      "resolved": "https://registry.npmjs.org/prisma/-/prisma-4.13.0.tgz",
+      "integrity": "sha512-L9mqjnSmvWIRCYJ9mQkwCtj4+JDYYTdhoyo8hlsHNDXaZLh/b4hR0IoKIBbTKxZuyHQzLopb/+0Rvb69uGV7uA==",
+      "devOptional": true,
+      "hasInstallScript": true,
+      "dependencies": {
+        "@prisma/engines": "4.13.0"
+      },
+      "bin": {
+        "prisma": "build/index.js",
+        "prisma2": "build/index.js"
+      },
+      "engines": {
+        "node": ">=14.17"
+      }
+    },
     "node_modules/process-nextick-args": {
       "version": "2.0.1",
       "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz",
diff --git a/package.json b/package.json
index ef5584d..2f0b9d3 100644
--- a/package.json
+++ b/package.json
@@ -25,7 +25,7 @@
     "@nestjs/common": "^9.0.0",
     "@nestjs/core": "^9.0.0",
     "@nestjs/platform-express": "^9.0.0",
-    "@prisma/client": "^4.9.0",
+    "@prisma/client": "^4.13.0",
     "@types/bcrypt": "^5.0.0",
     "@types/validator": "^13.7.12",
     "bcrypt": "^5.1.0",
@@ -52,6 +52,7 @@
     "eslint-plugin-prettier": "^4.0.0",
     "jest": "28.1.3",
     "prettier": "^2.3.2",
+    "prisma": "^4.13.0",
     "source-map-support": "^0.5.20",
     "supertest": "^6.1.3",
     "ts-jest": "28.0.8",
diff --git a/src/entrypoint/http/controllers/institution-controller.ts b/src/entrypoint/http/controllers/institution-controller.ts
index ceda97c..4d3a9d2 100644
--- a/src/entrypoint/http/controllers/institution-controller.ts
+++ b/src/entrypoint/http/controllers/institution-controller.ts
@@ -7,12 +7,12 @@ import {
 } from "@nestjs/common";
 import { InstitutionService } from "@domain/service/institution-service";
 import { Institution } from "@domain/entity/institution";
-import { EmailService } from "@domain/service/email-service";
+//import { EmailService } from "@domain/service/email-service";
 
 
 @Controller('institution')
 export class InstitutionController {
-  constructor(private institutionService: InstitutionService, private readonly emailService: EmailService) {}
+  constructor(private institutionService: InstitutionService) {}
   @Post()
   async createInstitution(@Body() institution: Institution) {
     const data = await this.institutionService.createInstitution(institution);
@@ -23,7 +23,7 @@ export class InstitutionController {
       });
     }
 
-    await this.emailService.sendEmail();
+    // this.emailService.sendEmail();
 
     return {
       statusCode: HttpStatus.OK,
